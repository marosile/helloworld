<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="studyMapper">

    <!-- 임시 -->
    <resultMap type="Study" id="StudyResultMap">

        <id property="studyNo" column="STUDY_NO"/>

        <result property="boardNo" column="BOARD_NO"/>
        <result property="boardTitle" column="BOARD_TITLE"/>
        <result property="boardContent" column="BOARD_CONTENT"/>
        <result property="createDate" column="CREATE_DT"/>
        <result property="modifyDate" column="MODIFY_DT"/>
        <result property="deletedFl" column="DELETED_FL"/>
        <result property="readCount" column="READ_COUNT"/>

        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberNickname" column="MEMBER_NICK"/>

        <result property="location" column="LOCATION"/>
        <result property="headCount" column="HEAD_COUNT"/>
        <result property="studyStatus" column="STUDY_STATUS"/>
        <result property="likeCount" column="LIKE_COUNT"/>

        <result property="itemNo" column="ITEM_NO"/>
        <result property="tagNm" column="TAG_NM"/>

    </resultMap>


    <!--스터디 목록 조회-->
    <select id="selectStudyList" resultMap="StudyResultMap">
        SELECT B.READ_COUNT,S.STUDY_NO,B.BOARD_NO,B.BOARD_TITLE,B.BOARD_CONTENT,S.LOCATION,S.STUDY_STATUS
         ,(SELECT COUNT(*) FROM "LIKE" L WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
        FROM BOARD B
        JOIN BOARD_STUDY S ON(B.BOARD_NO = S.BOARD_NO)
        WHERE B.DELETED_FL = 'N'
        ORDER BY S.BOARD_NO DESC
    </select>

    <!--스터디 상세 조회 -->
    <select id="studyDetail" resultMap="StudyResultMap">
        SELECT S.STUDY_STATUS
             , B.BOARD_NO
             , M.MEMBER_NICK
             , S.HEAD_COUNT
             , B.MEMBER_ID
             , B.BOARD_TITLE
             , B.BOARD_CONTENT
             , B.CREATE_DT
             , B.MODIFY_DT
             , B.DELETED_FL
             , B.READ_COUNT
             , S.LOCATION
             , S.STUDY_NO
             , T.TAG_NM
             , B.MODIFY_DT
             , TO_CHAR(B.CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분"') AS  CREATE_DT
             , (SELECT COUNT(*) FROM "LIKE" L WHERE L.BOARD_NO = S.BOARD_NO) LIKE_COUNT

        FROM BOARD B
                 JOIN BOARD_STUDY S ON (B.BOARD_NO = S.BOARD_NO)
                 JOIN "MEMBER" M ON (B.MEMBER_ID = M.MEMBER_ID)
                 JOIN TAG_RELATION TR ON(TR.ITEM_NO =B.BOARD_NO)
                 JOIN "TAG" T ON(T.TAG_NO=TR.TAG_NO)

        WHERE S.BOARD_NO = #{boardNo}
        AND ITEM_TYPE = 1
        ORDER BY S.BOARD_NO DESC
    </select>

    <!--스터디 삽입-->
    <insert id="studyInsert" parameterType="Study">
        <selectKey order="BEFORE" resultType="Study" keyProperty="studyNo,boardNo">
            SELECT SEQ_STUDY_NO.NEXTVAL AS "studyNo", SEQ_BOARD_NO.NEXTVAL AS "boardNo" FROM DUAL
        </selectKey>
        INSERT ALL
            INTO STUDY VALUES(${studyNo}, #{boardTitle}, #{memberId}, DEFAULT)
            INTO BOARD VALUES(${boardNo}, #{memberId}, #{boardTitle}, #{boardContent}, DEFAULT, NULL, DEFAULT, DEFAULT)
            INTO BOARD_STUDY VALUES(${boardNo}, ${studyNo}, #{location}, ${headCount}, 'N')
            INTO TAG_RELATION VALUES((SELECT TAG_NO FROM TAG WHERE TAG_NM = #{tagNm}), 0, ${boardNo})
            INTO TAG_RELATION VALUES((SELECT TAG_NO FROM TAG WHERE TAG_NM = #{tagNm}), 1, ${studyNo})
            SELECT * FROM DUAL
    </insert>

    <!--스터디 수정-->
    <update id="studyUpdate1" parameterType="Study">
        UPDATE STUDY SET STUDY_TITLE='${boardTitle}' WHERE STUDY_NO = ${studyNo}
    </update>

    <update id="studyUpdate2" parameterType="Study">
        UPDATE BOARD SET BOARD_TITLE='${boardTitle}', BOARD_CONTENT='${boardContent}' WHERE BOARD_NO=${boardNo}
    </update>

    <update id="studyUpdate3" parameterType="Study">
        UPDATE BOARD_STUDY SET LOCATION='${location}' WHERE BOARD_NO=${boardNo}
    </update>

    <update id="studyUpdate4" parameterType="Study">
        UPDATE TAG_RELATION SET TAG_NO = ${tagNo}
        WHERE ITEM_NO = ${boardNo}
        AND ITEM_TYPE = 0
    </update>

    <update id="studyUpdate5" parameterType="Study">
        UPDATE TAG_RELATION SET TAG_NO = ${tagNo}
        WHERE ITEM_NO = ${studyNo}
        AND ITEM_TYPE = 1
    </update>

    <!-- 좋아요 확인 여부-->
    <select id="likeCheck" resultType="_int">
        SELECT COUNT(*)
        FROM "LIKE" L
        JOIN BOARD_STUDY S ON (L.BOARD_NO = S.BOARD_NO)
        WHERE S.BOARD_NO = #{boardNo}
        AND MEMBER_ID = #{memberId}
    </select>

    <!-- 좋아요 삽입-->
    <insert id="insertStudyLike">
        INSERT INTO "LIKE" VALUES(#{boardNo}, #{memberId})
    </insert>

    <!--좋아요 삭제-->
    <delete id="deleteStudyLike">
        DELETE FROM "LIKE"
        WHERE BOARD_NO = #{boardNo}
        AND MEMBER_ID = #{memberId}
    </delete>

    <!--좋아요 개수 조회-->
    <select id="countStudyLike" resultType="_int">
        SELECT COUNT(*) FROM "LIKE"
        WHERE BOARD_NO =#{boardNo}
    </select>

    <!--조회수 조회-->
    <update id="updateReadCount">
        UPDATE BOARD SET
        READ_COUNT = READ_COUNT+1
        WHERE BOARD_NO= #{boardNo}
    </update>

    <!--게시글 삭제-->
    <update id="studyDelete">
        UPDATE BOARD SET
        DELETED_FL = 'Y'
        WHERE BOARD_NO = #{boardNo}
    </update>

     <!--모집완료-->
    <update id="complete">
        UPDATE BOARD_STUDY SET STUDY_STATUS = 'Y'
        WHERE BOARD_NO = #{boardNo}
    </update>
</mapper>
