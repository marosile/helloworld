<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<resultMap type="Admin" id="adminResultMap">

		<id property="reportNo" column="REPORT_NO" />

		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="reportContent" column="REPORT_CONTENT" />


		<result property="cmpnNo" column="CMPN_NO" />
		<result property="userId" column="MEMBER_ID" />
		<result property="cmpnNm" column="CMPN_NM" />
		<result property="cmpnAddr" column="CMPN_ADDR" />
		<result property="cmpnLogo" column="CMPN_LOGO" />
		<result property="cmpnIntro" column="CMPN_INTRO" />
		<result property="cmpnMCount" column="CMPN_MCOUNT" />
		<result property="cmpnFl" column="CMPN_FL" />
		<result property="userTel" column="MEMBER_TEL" />

	</resultMap>

	<!-- 멤버 resultMap -->
	<resultMap id="member_rm" type="Member">

		<id property="memberId" column="MEMBER_ID"/>

		<result property="memberPw" column="MEMBER_PW"/>
		<result property="memberNick" column="MEMBER_NICK"/>
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="memberTel" column="MEMBER_TEL"/>
		<result property="profileImg" column="PROFILE_IMG"/>
		<result property="enrollDate" column="ENROLL_DT"/>
		<result property="promotionFl" column="PROMOTION_FL"/>
		<result property="deleteFl" column="DELETED_FL"/>

		<result property="rowNum" column="ROWNUM"/>
	</resultMap>
	
	
	<!-- 신고글 목록 조회 -->
	<select id="adminReport" resultMap="adminResultMap">
		SELECT BOARD_TITLE, BOARD_NO, R.MEMBER_ID, REPORT_CONTENT
		FROM BOARD B
		LEFT JOIN "REPORT" R USING (BOARD_NO)
		WHERE REPORT_CONTENT IS NOT NULL
		AND R.MEMBER_ID IS NOT NULL
	</select>

	<!-- 관리자 회원 목록 조회 -->
	<select id="searchMemberList" resultMap="member_rm">
		SELECT ROWNUM, MEMBER_ID, MEMBER_NICK, MEMBER_EMAIL, MEMBER_TEL,
			   TO_CHAR(ENROLL_DT, 'YYYY-MM-DD') ENROLL_DT
		FROM "MEMBER"
		WHERE DELETED_FL = 'N'
		ORDER BY ROWNUM DESC
	</select>

	<!-- 관리자 회원 탈퇴 -->
	<update id="deleteMember">
		UPDATE "MEMBER"
		SET DELETED_FL = 'Y'
		WHERE MEMBER_ID=#{memberId}
	</update>


	<!-- 검색 조건이 일치하는 회원 수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER"

		WHERE DELETED_FL='N'

		<choose>
			<when test='key == "아이디"'>
				AND MEMBER_ID LIKE '%${query}%'
			</when>

			<when test='key == "이메일"'>
				AND MEMBER_EMAIL LIKE '%${query}%'
			</when>

			<when test='key == "전화번호"'>
				AND MEMBER_TEL LIKE '%${query}%'
			</when>

			<when test='key == "닉네임"'>
				AND MEMBER_NICK LIKE '%${query}%'
			</when>

		</choose>

	</select>

	<!-- 관리자 회원 목록 조회 -->
	<select id="searchMemberList1" resultMap="member_rm">
		SELECT ROWNUM, MEMBER_ID, MEMBER_NICK, MEMBER_EMAIL, MEMBER_TEL,
			   TO_CHAR(ENROLL_DT, 'YYYY-MM-DD') ENROLL_DT
		FROM "MEMBER"
		WHERE DELETED_FL = 'N'

		<choose>
			<when test='key == "아이디"'>
				AND MEMBER_ID LIKE '%${query}%'
			</when>

			<when test='key == "이메일"'>
				AND MEMBER_EMAIL LIKE '%${query}%'
			</when>

			<when test='key == "전화번호"'>
				AND MEMBER_TEL LIKE '%${query}%'
			</when>

			<when test='key == "닉네임"'>
				AND MEMBER_NICK LIKE '%${query}%'
			</when>

		</choose>

		ORDER BY ROWNUM DESC


	</select>



	<select id="memberCount" resultType="_int">
		SELECT COUNT(*) FROM "MEMBER"
		WHERE DELETED_FL='N'
	</select>

	<!-- 관리자 기업담당자 자격 신청 목록 -->
	<select id="recruitList" resultMap="adminResultMap">
		SELECT CMPN_NO, MEMBER_ID, CMPN_NM, CMPN_ADDR, CMPN_LOGO, CMPN_INTRO, CMPN_MCOUNT, CMPN_FL FROM "COMPANY"
		WHERE CMPN_FL = 'N'
		ORDER BY CMPN_NO
	</select>

	<!-- 관리자 기업담당자 자격 신청 위한 전화번호 조회-->
	<select id="userTel" resultType="string">
		SELECT MEMBER_TEL FROM "MEMBER"
		WHERE MEMBER_ID = #{userId}
	</select>

	<!-- 관리자 상세 페이지 조회-->
	<select id="recruitOfficerDetail" resultMap="adminResultMap">
		SELECT CMPN_NO, MEMBER_ID, CMPN_NM, CMPN_ADDR, CMPN_LOGO, CMPN_INTRO, CMPN_MCOUNT, CMPN_FL, MEMBER_TEL
		FROM COMPANY
				 JOIN MEMBER USING(MEMBER_ID)
		WHERE MEMBER_ID = #{userId}
		ORDER BY CMPN_NO
	</select>

	<!-- 관리자 기업 담당 업데이트 -->
	<update id="recruitOfficerUpdate" >
		UPDATE COMPANY SET CMPN_FL='Y'
		WHERE MEMBER_ID = #{userId}
	</update>

	<!-- 관리자 기업 담당 추가 -->
	<insert id="recruitOfficerInsert">
		INSERT INTO AUTHORITY
		VALUES(2, #{userId})
	</insert>

	<!-- 관리자 현재 기업 담당자 목록 -->
	<select id="recruitListCurr" resultMap="adminResultMap">
		SELECT CMPN_NO, MEMBER_ID, CMPN_NM, CMPN_ADDR, CMPN_LOGO, CMPN_INTRO, CMPN_MCOUNT, CMPN_FL FROM "COMPANY"
		WHERE CMPN_FL = 'Y'
		ORDER BY CMPN_NO
	</select>

	<!-- 관리자 기업 담당 삭제 -->
	<update id="recruitOfficerDelete" >
		UPDATE COMPANY SET CMPN_FL='N'
		WHERE MEMBER_ID = #{userId}
	</update>

<!--	 관리자 기업 담당 삭제-->
	<delete id="recruitOfficerDelete2" >
		DELETE FROM "AUTHORITY"
		WHERE MEMBER_ID= #{userId}
	</delete>

</mapper>