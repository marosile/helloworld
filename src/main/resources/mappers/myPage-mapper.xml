<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myPageMapper">

	<!-- BookmarkList(커뮤니티)에 대한 resultMap-->
	<resultMap type="BookmarkList" id="bookmark_rm">
	
		<id property="boardNo" column ="BOARD_NO"/>
		
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberNickname" column="MEMBER_NICK" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="createDate" column="CREATE_DT" />
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="commentCount" column="COMMENT_COUNT" />
		
	</resultMap>
	
	<!-- bookmarkList2(채용공고)의 resultMap -->
	<resultMap type="BookmarkList2" id="bookmark_rm2">
	
		<id property="boardNo" column ="BOARD_NO"/>
		
		<result property="memberId" column="MEMBER_ID" />
		<result property="companyLogo" column="CMPN_LOGO" />
		<result property="companyName" column="CMPN_NM" />
		<result property="companyAddress" column="CMPN_ADDR" />
		<result property="experiencePeriod" column="EXPR_PERIOD" />
		<result property="employeeType" column="EMPL_TYPE" />
	</resultMap>
	
	
	<!-- PostList에 대한 resultMap -->
	<resultMap type="PostList" id="post_rm">
	
		<id property="boardNo" column ="BOARD_NO"/>
		
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="createDate" column="CREATE_DT" />
		<result property="readCount" column="READ_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="commentCount" column="COMMENT_COUNT" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberNickname" column="MEMBER_NICK" />
		<result property="followFrom" column="FOLLOW_FROM" />
		<result property="followTo" column="FOLLOW_TO" />
		
	</resultMap>
	
	<!-- Like resultMap -->

	<!-- 프사, 닉네임 수정 -->
	<update id="updateProfile" parameterType="Member">
		UPDATE MEMBER SET
		PROFILE_IMG = #{profileImg},
		MEMBER_NICK = #{memberNick}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
   <!-- 비밀번호 조회 -->
   <select id="selectEncPw" resultType="string">
		SELECT MEMBER_PW FROM MEMBER WHERE MEMBER_ID = #{memberId}
   </select>
   
   <!-- 비밀번호 변경 -->
   <update id="changePw" parameterType="Member">
   		UPDATE MEMBER SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_ID = #{memberId}
   </update>
   
   <!-- 회원탈퇴 -->
   <update id="secession">
   		UPDATE MEMBER SET
   		DELETED_FL = 'Y'
   		WHERE MEMBER_ID = #{memberId}
   </update>
   
   <!-- 이메일 업데이트 -->
   <update id="updateEmail">
   		UPDATE MEMBER SET
   		MEMBER_EMAIL = #{memberEmail}
   		WHERE MEMBER_ID = #{memberId}
   </update>
   
   
   <!-- 커뮤니티 북마크 목록 조회 -->
   <select id="selectBookmark" resultMap="bookmark_rm" >
   		SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.CREATE_DT, 
   				B.MODIFY_DT, B.READ_COUNT, M.MEMBER_NICK, M.PROFILE_IMG, BOARD_CODE
		FROM BOARD B
		INNER JOIN BOOKMARK BM ON B.BOARD_NO = BM.BOARD_NO
		INNER JOIN MEMBER M ON B.MEMBER_ID = M.MEMBER_ID
		INNER JOIN BOARD_GENERAL G ON B.BOARD_NO = G.BOARD_NO
		WHERE BM.MEMBER_ID = #{memberId}
		AND EXISTS (SELECT 1
		                 FROM BOARD_GENERAL BG
		                WHERE B.BOARD_NO = BG.BOARD_NO)
   </select>
   
   <!-- 채용 북마크 조회 -->
   <select id="selectBookmark2" resultMap="bookmark_rm2">
   		SELECT CMPN_LOGO, CMPN_NM, EXPR_PERIOD, EMPL_TYPE, CMPN_ADDR
		FROM BOOKMARK BM
		JOIN COMPANY C ON (C.MEMBER_ID = BM.MEMBER_ID)
		JOIN BOARD_RECRUIT BR ON (BM.BOARD_NO = BR.BOARD_NO)
		WHERE C.MEMBER_ID = #{memberId}
		AND EXISTS (SELECT 1
		                 FROM BOARD_RECRUIT BR
		                 WHERE BM.BOARD_NO = BR.BOARD_NO)
   </select>
   
   
   <!-- 나의 게시글 목록 조회 -->
   <select id="selectPostList" resultMap="post_rm">
   		SELECT B.BOARD_NO, BOARD_TITLE, TO_CHAR(CREATE_DT, 'YYYY-MM-DD')AS CREATE_DT, READ_COUNT, BOARD_CODE,
       
            (SELECT COUNT(*) FROM "COMMENT" C
             WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,             
             
            (SELECT COUNT(*) FROM "LIKE" L
             WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
             FROM "BOARD" B
             
         JOIN BOARD_GENERAL G ON(G.BOARD_NO = B.BOARD_NO)
         
         WHERE DELETED_FL = 'N'
         AND MEMBER_ID = #{memberId}
         ORDER BY B.BOARD_NO DESC
   </select>
   
   
   <!-- 좋아요 목록 조회 -->
   <select id="selectLikeList" resultMap="post_rm">
   		SELECT B.BOARD_NO, BOARD_TITLE, TO_CHAR(CREATE_DT, 'YYYY-MM-DD')AS CREATE_DT, READ_COUNT, BOARD_CODE, M.MEMBER_NICK,
       
            (SELECT COUNT(*) FROM "COMMENT" C
             WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,             
             
            (SELECT COUNT(*) FROM "LIKE" L
             WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
             FROM "LIKE" L
             
         JOIN BOARD_GENERAL G ON(G.BOARD_NO = L.BOARD_NO)
         JOIN BOARD B ON(B.BOARD_NO = L.BOARD_NO)
         INNER JOIN "MEMBER" M ON B.MEMBER_ID = M.MEMBER_ID         
         
         WHERE L.MEMBER_ID = #{memberId}
         ORDER BY B.BOARD_NO DESC
   </select>
   
   
   <!-- 팔로워수 조회 -->
   <select id="selectFollowerList" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		JOIN FOLLOW ON(MEMBER_ID = FOLLOW_FROM)
		WHERE FOLLOW_TO = #{memberId}
   </select>
   
   <!-- 팔로잉수 조회 -->
   <select id="selectFollowingList" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		JOIN FOLLOW ON(MEMBER_ID = FOLLOW_TO)
		WHERE FOLLOW_FROM = #{memberId}
   </select>
   
   
   
   <!-- 팔로잉 닉넴 프사 조회 -->
   <select id="selectfollowing" resultMap="bookmark_rm">
		SELECT PROFILE_IMG, MEMBER_NICK
		FROM MEMBER
		JOIN FOLLOW ON(MEMBER_ID = FOLLOW_TO)
		WHERE FOLLOW_FROM = #{memberId}
   </select>
   
   <!-- 팔로워 조회 -->
   <select id="selectfollower" resultMap="bookmark_rm">
		SELECT PROFILE_IMG, MEMBER_NICK
		FROM MEMBER
		JOIN FOLLOW ON(MEMBER_ID = FOLLOW_FROM)
		WHERE FOLLOW_TO = #{memberId}
   </select>
   
   
   
   
   
   
   
   
	


</mapper>
